name: network-gate

on:
  workflow_dispatch:
  pull_request:
    paths: ["**/*"]

concurrency:
  group: network-gate-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  gate:
    runs-on: ubuntu-latest
    env:
      HOST_PRIMARY:  "https://arka-squad.app"
      HOST_FALLBACK: "https://arka-liard.vercel.app"
      HTTP_PROXY: ""
      HTTPS_PROXY: ""
      ALL_PROXY: ""
      NO_PROXY: "localhost,127.0.0.1,.vercel.app,.vercel.dev,vercel.com,arka-squad.app,www.arka-squad.app,arka-liard.vercel.app"

    steps:
      - uses: actions/checkout@v4

      - name: net-dbg
        shell: bash
        run: |
          echo "== proxy env =="; env | grep -iE 'http_proxy|https_proxy|all_proxy|no_proxy' || true
          echo "== resolv =="; cat /etc/resolv.conf || true
          echo "== dns =="
          getent hosts arka-squad.app || true
          getent hosts www.arka-squad.app || true
          getent hosts arka-liard.vercel.app || true
          echo "== route =="; which ip && ip route get 1.1.1.1 || true

      - name: curl-primary
        shell: bash
        run: |
          set -euxo pipefail
          t0=$(date -Ins)
          code=$(curl -4sS --noproxy '*' -o /dev/null -w '%{http_code}' --connect-timeout 5 --max-time 15 "$HOST_PRIMARY/api/health" || echo 000)
          echo "PRIMARY $t0 -> $code"

      - name: curl-fallback
        shell: bash
        run: |
          set -euxo pipefail
          t0=$(date -Ins)
          code=$(curl -4sS --noproxy '*' -o /dev/null -w '%{http_code}' --connect-timeout 5 --max-time 15 "$HOST_FALLBACK/api/health" || echo 000)
          echo "FALLBACK $t0 -> $code"

      - name: choose-host
        id: pick
        shell: bash
        run: |
          set -euo pipefail
          code=$(curl -4sS --noproxy '*' -o /dev/null -w '%{http_code}' --connect-timeout 5 --max-time 15 "$HOST_PRIMARY/api/health" || echo 000)
          if [ "$code" = "200" ]; then
            echo "HOST=$HOST_PRIMARY"   >> "$GITHUB_ENV"
            echo "picked=primary"       >> "$GITHUB_OUTPUT"
          else
            echo "HOST=$HOST_FALLBACK"  >> "$GITHUB_ENV"
            echo "picked=fallback"      >> "$GITHUB_OUTPUT"
          fi

      - name: log-choice
        run: echo "Picked host: ${{ steps.pick.outputs.picked }} (${{ env.HOST }})"

      - name: rbac-smokes
        if: ${{ secrets.RBAC_TOKEN_VIEWER != '' && secrets.RBAC_TOKEN_EDITOR != '' && secrets.RBAC_TOKEN_ADMIN != '' }}
        env:
          HOST:         ${{ env.HOST }}
          TOKEN_VIEWER: ${{ secrets.RBAC_TOKEN_VIEWER }}
          TOKEN_EDITOR: ${{ secrets.RBAC_TOKEN_EDITOR }}
          TOKEN_ADMIN:  ${{ secrets.RBAC_TOKEN_ADMIN }}
        run: |
          echo "Running smokes on $HOST"
          bash scripts/smoke_agents.sh

