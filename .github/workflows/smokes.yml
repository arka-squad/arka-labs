name: OPS R3 - B1 Smokes
on:
  workflow_dispatch:
  schedule:
    - cron: "15 */6 * * *"

jobs:
  smokes:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        envname: [production, preview]
    environment: ${{ matrix.envname }}
    steps:
      - name: Resolve HOST from environment
        id: host
        run: |
          if [ "${{ matrix.envname }}" = "production" ]; then
            HOST="${{ vars.PROD_HOST }}"
          else
            HOST="${{ vars.PREVIEW_HOST }}"
          fi
          if [ -z "$HOST" ]; then
            echo "ERROR: Missing PROD_HOST/PREVIEW_HOST in GitHub → Settings → Environments → ${{ matrix.envname }} → Variables." >&2
            exit 1
          fi
          echo "host=$HOST" >> "$GITHUB_OUTPUT"

      - name: Generate Trace ID
        id: trace
        run: echo "id=ops-$(date +%s)" >> "$GITHUB_OUTPUT"

      - name: Ensure curl and jq are available
        shell: bash
        run: |
          set -euo pipefail
          echo "Pre-check: curl=$(command -v curl || echo 'N/A'), jq=$(command -v jq || echo 'N/A')"
          if ! command -v curl >/dev/null 2>&1 || ! command -v jq >/dev/null 2>&1; then
            echo "Installing curl + jq..."
            sudo apt-get update -yqq
            sudo apt-get install -yqq curl jq
          fi
          curl --version
          jq --version

      - name: Curl 4 endpoints (expect 200)
        shell: bash
        env:
          SMOKES_AUTH: ${{ secrets.SMOKES_AUTH }}
          VERCEL_BYPASS: ${{ secrets.VERCEL_BYPASS }}
          RBAC_TOKEN_EDITOR: ${{ secrets.RBAC_TOKEN_EDITOR }}
        run: |
          set -euo pipefail
          BASE="${{ steps.host.outputs.host }}"
          TID="${{ steps.trace.outputs.id }}"
          echo "Trace: $TID | Host: $BASE"

          # Build headers (no secret logging)
          HDR=( -H "X-Trace-Id: $TID" )
          # 1) Priority to SMOKES_AUTH if provided (full 'name: value' line)
          if [[ -n "${SMOKES_AUTH:-}" ]]; then
            HDR+=( -H "${SMOKES_AUTH}" )
          # 2) Else, bearer from RBAC editor token
          elif [[ -n "${RBAC_TOKEN_EDITOR:-}" ]]; then
            HDR+=( -H "Authorization: Bearer ${RBAC_TOKEN_EDITOR}" )
          fi
          # Preview bypass (if defined)
          if [[ "${{ matrix.envname }}" == "preview" && -n "${VERCEL_BYPASS:-}" ]]; then
            HDR+=( -H "x-vercel-protection-bypass: ${VERCEL_BYPASS}" )
          fi

          endpoints=( "/api/health" "/api/metrics/kpis" "/api/metrics/runs?page=1&limit=20" )
          if [[ "${AI_STREAM_REQUIRED:-0}" == "1" ]]; then
            endpoints+=( "/api/ai/stream" )
          fi

          fail=0
          for ENDPOINT in "${endpoints[@]}"; do
            CODE=$(curl -sS -o /dev/null -w "%{http_code}" "${HDR[@]}" "$BASE$ENDPOINT")
            echo "$ENDPOINT -> $CODE"
            if [[ "$CODE" != "200" ]]; then
              if [[ "$ENDPOINT" == "/api/ai/stream" && "${AI_STREAM_REQUIRED:-0}" != "1" && ( "$CODE" == "404" || "$CODE" == "405" ) ]]; then
                echo "NOTE: $ENDPOINT $CODE tolerated (AI stream optional)."
              else
                fail=1
              fi
            fi
          done

          echo "trace_id=$TID" >> "$GITHUB_ENV"
          test "$fail" -eq 0

      - name: KPIs minimal (visibility)
        shell: bash
        env:
          SMOKES_AUTH: ${{ secrets.SMOKES_AUTH }}
          VERCEL_BYPASS: ${{ secrets.VERCEL_BYPASS }}
          RBAC_TOKEN_EDITOR: ${{ secrets.RBAC_TOKEN_EDITOR }}
        run: |
          set -euo pipefail
          HDR=( -H "X-Trace-Id: $trace_id" )
          if [[ -n "${SMOKES_AUTH:-}" ]]; then
            HDR+=( -H "${SMOKES_AUTH}" )
          elif [[ -n "${RBAC_TOKEN_EDITOR:-}" ]]; then
            HDR+=( -H "Authorization: Bearer ${RBAC_TOKEN_EDITOR}" )
          fi
          if [[ "${{ matrix.envname }}" == "preview" && -n "${VERCEL_BYPASS:-}" ]]; then
            HDR+=( -H "x-vercel-protection-bypass: ${VERCEL_BYPASS}" )
          fi
          curl -sS "${{ steps.host.outputs.host }}/api/metrics/kpis" "${HDR[@]}" \
            | jq '. | {p95_ttft_ms, p95_rtt_ms, error_rate_percent}'

      - name: Summary
        if: always()
        run: |
          echo "### ${{ matrix.envname }}: 4x200 | Trace $trace_id" >> "$GITHUB_STEP_SUMMARY"
