name: rbac-smokes
on:
  workflow_dispatch:
  pull_request:
    paths: ['**/*']

jobs:
  smokes:
    runs-on: ubuntu-latest
    env:
      RBAC_SMOKES_MODE: fail
      HTTP_PROXY: ''
      HTTPS_PROXY: ''
      ALL_PROXY: ''
      NO_PROXY: 'localhost,127.0.0.1,.vercel.app,.vercel.dev,vercel.com,arka-squad.app,www.arka-squad.app,arka-liard.vercel.app'
    steps:
      - uses: actions/checkout@v4

      - name: net-guard
        id: net
        run: |
          set -euo pipefail
          HOST="${HOST:-https://arka-squad.app}"
          if curl -4sS --connect-timeout 3 --max-time 5 -o /dev/null "$HOST/api/health"; then
            echo "NET_OK=1" >> "$GITHUB_ENV"
          else
            echo "offline â€” skipping smokes"; echo "NET_OK=0" >> "$GITHUB_ENV"
          fi

      - name: run smokes (matrix)
        if: env.NET_OK == '1' && hashFiles('scripts/smokes_matrix_guard.mjs') != ''
        env:
          RBAC_TOKEN_VIEWER: ${{ secrets.RBAC_TOKEN_VIEWER }}
          RBAC_TOKEN_EDITOR: ${{ secrets.RBAC_TOKEN_EDITOR }}
          RBAC_TOKEN_ADMIN: ${{ secrets.RBAC_TOKEN_ADMIN }}
        run: node scripts/smokes_matrix_guard.mjs --host "${{ env.HOST || 'https://arka-squad.app' }}" --mode "${RBAC_SMOKES_MODE:-fail}" | tee logs/rbac_smokes.ndjson

      - name: run smokes (minimal)
        if: env.NET_OK == '1' && hashFiles('scripts/smokes_matrix_guard.mjs') == ''
        env:
          RBAC_TOKEN_VIEWER: ${{ secrets.RBAC_TOKEN_VIEWER }}
          RBAC_TOKEN_EDITOR: ${{ secrets.RBAC_TOKEN_EDITOR }}
          RBAC_TOKEN_ADMIN: ${{ secrets.RBAC_TOKEN_ADMIN }}
        run: |
          set -euo pipefail
          mkdir -p logs
          for role in viewer editor admin; do
            tok_var="RBAC_TOKEN_${role^^}"; token="${!tok_var:-}"
            code=$(curl -4sS -o /dev/null -w '%{http_code}' --connect-timeout 5 --max-time 15 -H "Authorization: Bearer $token" "$HOST/api/agents" || echo 000)
            echo "{\"ts\":\"$(date -Is)\",\"role\":\"$role\",\"route\":\"/api/agents\",\"code\":$code}" | tee -a logs/rbac_smokes.ndjson
          done

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rbac-smokes
          path: |
            logs/rbac_smokes.ndjson
